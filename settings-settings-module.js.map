{"version":3,"sources":["./src/app/authorized/settings/components/hil-selection-dialog/hil-selection-dialog.component.ts","./src/app/authorized/settings/components/hil-selection-dialog/hil-selection-dialog.component.html","./src/app/authorized/settings/components/settings-page/settings-page.component.ts","./src/app/authorized/settings/components/settings-page/settings-page.component.html","./src/app/authorized/settings/settings-routing.module.ts","./src/app/authorized/settings/settings.module.ts"],"names":[],"mappings":"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","file":"settings-settings-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HilService, Hil } from 'src/app/shared/services/hil.service';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-hil-selection-dialog',\r\n  templateUrl: './hil-selection-dialog.component.html',\r\n  styleUrls: ['./hil-selection-dialog.component.scss']\r\n})\r\nexport class HilSelectionDialogComponent implements OnInit {\r\n  displayedColumns: string[] = ['select', 'machinename', 'labcarname'];\r\n  dataSource = new MatTableDataSource<Hil>();\r\n\r\n  public initialSelection: Hil[] = [];\r\n  selection = new SelectionModel<Hil>(true, []);\r\n\r\n  constructor(private hilService: HilService) {\r\n  }\r\n\r\n  ngOnInit(): void\r\n  {\r\n    this.hilService.getHil().subscribe(\r\n      (data) => {\r\n        this.dataSource.data = data;\r\n        const savedHils: string[] = JSON.parse(localStorage.getItem('hils'));\r\n        this.initialSelection = data.filter(x => savedHils.includes(x.labcarname));\r\n        this.selection.select(...this.initialSelection);\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected(): boolean {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle(): void {\r\n    this.isAllSelected() ?\r\n        this.selection.clear() :\r\n        this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: Hil): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} `;\r\n  }\r\n\r\n}\r\n\r\n\r\n","<mat-dialog-content class=\"mat-typography\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n    <!-- Checkbox Column -->\r\n    <ng-container matColumnDef=\"select\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <mat-checkbox\r\n          (change)=\"$event ? masterToggle() : null\"\r\n          [checked]=\"selection.hasValue() && isAllSelected()\"\r\n          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n          [aria-label]=\"checkboxLabel()\"\r\n        >\r\n        </mat-checkbox>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <mat-checkbox\r\n          (click)=\"$event.stopPropagation()\"\r\n          (change)=\"$event ? selection.toggle(row) : null\"\r\n          [checked]=\"selection.isSelected(row)\"\r\n          [aria-label]=\"checkboxLabel(row)\"\r\n        >\r\n        </mat-checkbox>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- machinename Column -->\r\n    <ng-container matColumnDef=\"machinename\">\r\n      <th mat-header-cell *matHeaderCellDef>Machine name</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.machinename }}</td>\r\n    </ng-container>\r\n\r\n    <!-- labcarname Column -->\r\n    <ng-container matColumnDef=\"labcarname\">\r\n      <th mat-header-cell *matHeaderCellDef>Labcar name</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.labcarname }}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr\r\n      mat-row\r\n      *matRowDef=\"let row; columns: displayedColumns\"\r\n      (click)=\"selection.toggle(row)\"\r\n    ></tr>\r\n  </table>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    [mat-dialog-close]=\"selection.selected\"\r\n  >\r\n    Save and close\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HilSelectionDialogComponent } from '../hil-selection-dialog/hil-selection-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { Hil } from 'src/app/shared/services/hil.service';\r\n\r\n@Component({\r\n  selector: 'app-settings-page',\r\n  templateUrl: './settings-page.component.html',\r\n  styleUrls: ['./settings-page.component.scss'],\r\n})\r\nexport class SettingsPageComponent implements OnInit {\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(HilSelectionDialogComponent,{\r\n      width: '500px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: Hil[]) => {\r\n      if (result) {\r\n        localStorage.setItem('hils', JSON.stringify(result.map(x => x.labcarname)));\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"row mt-4\">\r\n  <div class=\"col-sm-4\" (click)=\"openDialog()\">\r\n    <div class=\"settings-wrapper rounded-circle text-center \">\r\n      <i class=\"fa fa-tasks fa-3x\" aria-hidden=\"true\"></i>\r\n      <h4>HILS</h4>\r\n      <span class=\"material-icons md-96\">\r\n        directions_car\r\n      </span>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-sm-4\" >\r\n    <div class=\"settings-wrapper rounded-circle text-center \">\r\n      <i class=\"fa fa-tasks fa-3x\" aria-hidden=\"true\"></i>\r\n      <h4>Account</h4>\r\n      <span class=\"material-icons md-96\">\r\n        account_circle\r\n      </span>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-sm-4\" >\r\n    <div class=\"settings-wrapper rounded-circle text-center \">\r\n      <i class=\"fa fa-tasks fa-3x\" aria-hidden=\"true\"></i>\r\n      <h4>Test</h4>\r\n      <span class=\"material-icons md-96\">\r\n        description\r\n      </span>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SettingsPageComponent } from './components/settings-page/settings-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPageComponent,\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsPageComponent } from './components/settings-page/settings-page.component';\nimport { SharedModule } from './../../shared/shared.module';\nimport { HilSelectionDialogComponent } from './components/hil-selection-dialog/hil-selection-dialog.component';\n\n@NgModule({\n  declarations: [SettingsPageComponent, HilSelectionDialogComponent],\n  imports: [\n    CommonModule,\n    SettingsRoutingModule,\n    SharedModule\n  ]\n})\nexport class SettingsModule { }\n"],"sourceRoot":"webpack:///"}